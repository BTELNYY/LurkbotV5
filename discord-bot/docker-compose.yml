services:
  backend:
    build: ./backend
    expose:
      - "8000"
    restart: unless-stopped
    environment:
      - ROCKET_PORT=8000
      -  ROCKET_ADDRESS=0.0.0.0
    volumes:
      - ./config.txt:/app/config.txt
    entrypoint: /usr/local/bin/backend /app/config.txt
    links:
      - db
    depends_on:
      db:
        condition: service_healthy
  bot:
    build: ./discord-bot
    restart: unless-stopped
    volumes:
      - ./config.txt:/app/config.txt
      - ./statistics:/app/statistics/
      - ./translations:/app/translations/
      - ./logs:/app/logs/
    environment:
      - RUNNING_IN_DOCKER=true
    links:
      - backend
    depends_on:
      backend:
        condition: service_healthy
  db:
    image: postgres:alpine
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "lurky", "-d", "postgres"]
      interval: 5s
      timeout: 60s
      retries: 5
      start_period: 5s
    restart: unless-stopped
    environment:
      - POSTGRES_USER=lurky
      - POSTGRES_PASSWORD=put_a_good_password_here
    volumes: 
      - ./db:/var/lib/postgresql/data


volumes:
  db:
    driver: local